{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"../assets/Styles/PermissionTable.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PermissionTable=()=>{const[roles,setRoles]=useState([]);const[originalRoles,setOriginalRoles]=useState([]);// Fetch roles from the JSON server when the component mounts\nuseEffect(()=>{fetch(\"http://localhost:5000/roles\").then(response=>response.json()).then(data=>{setRoles(data);setOriginalRoles(data);}).catch(error=>console.error(\"Error fetching roles:\",error));},[]);// Toggle permission for a specific role\nconst togglePermission=(roleId,permission)=>{setRoles(prevRoles=>prevRoles.map(role=>role.id===roleId?{...role,permissions:role.permissions.includes(permission)?role.permissions.filter(perm=>perm!==permission):[...role.permissions,permission]}:role));};// Save changes to the server\nconst handleSaveChanges=()=>{roles.forEach(role=>{fetch(`http://localhost:5000/roles/${role.id}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(role)}).then(response=>{if(!response.ok){throw new Error(`Failed to update role: ${role.roleName}`);}}).catch(error=>console.error(\"Error updating roles:\",error));});setOriginalRoles([...roles]);alert(\"Permissions updated successfully!\");};// Cancel changes and revert to the original state\nconst handleCancelChanges=()=>{setRoles([...originalRoles]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"permission-table\",children:[/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Role Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Permissions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:roles.map(role=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:role.roleName}),/*#__PURE__*/_jsx(\"td\",{children:[\"Read\",\"Write\",\"Delete\"].map(permission=>/*#__PURE__*/_jsxs(\"label\",{className:\"permission-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:role.permissions.includes(permission),onChange:()=>togglePermission(role.id,permission)}),permission]},permission))})]},role.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveChanges,className:\"save-button\",children:\"Save Changes\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCancelChanges,className:\"cancel-button\",children:\"Cancel\"})]})]});};export default PermissionTable;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","PermissionTable","roles","setRoles","originalRoles","setOriginalRoles","fetch","then","response","json","data","catch","error","console","togglePermission","roleId","permission","prevRoles","map","role","id","permissions","includes","filter","perm","handleSaveChanges","forEach","method","headers","body","JSON","stringify","ok","Error","roleName","alert","handleCancelChanges","className","children","type","checked","onChange","onClick"],"sources":["C:/Users/ANILA/rbac-ui-dashboard/src/Components/PermissionTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../assets/Styles/PermissionTable.css\";\r\n\r\nconst PermissionTable = () => {\r\n  const [roles, setRoles] = useState([]);\r\n  const [originalRoles, setOriginalRoles] = useState([]);\r\n\r\n  // Fetch roles from the JSON server when the component mounts\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/roles\") \r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setRoles(data);\r\n        setOriginalRoles(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching roles:\", error));\r\n  }, []);\r\n\r\n  // Toggle permission for a specific role\r\n  const togglePermission = (roleId, permission) => {\r\n    setRoles((prevRoles) =>\r\n      prevRoles.map((role) =>\r\n        role.id === roleId\r\n          ? {\r\n              ...role,\r\n              permissions: role.permissions.includes(permission)\r\n                ? role.permissions.filter((perm) => perm !== permission)\r\n                : [...role.permissions, permission],\r\n            }\r\n          : role\r\n      )\r\n    );\r\n  };\r\n\r\n  // Save changes to the server\r\n  const handleSaveChanges = () => {\r\n    roles.forEach((role) => {\r\n      fetch(`http://localhost:5000/roles/${role.id}`, {\r\n        method: \"PUT\", \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(role),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`Failed to update role: ${role.roleName}`);\r\n          }\r\n        })\r\n        .catch((error) => console.error(\"Error updating roles:\", error));\r\n    });\r\n\r\n    setOriginalRoles([...roles]); \r\n    alert(\"Permissions updated successfully!\");\r\n  };\r\n\r\n  // Cancel changes and revert to the original state\r\n  const handleCancelChanges = () => {\r\n    setRoles([...originalRoles]); \r\n  };\r\n\r\n  return (\r\n    <div className=\"permission-table\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Role Name</th>\r\n            <th>Permissions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {roles.map((role) => (\r\n            <tr key={role.id}>\r\n              <td>{role.roleName}</td>\r\n              <td>\r\n                {[\"Read\", \"Write\", \"Delete\"].map((permission) => (\r\n                  <label key={permission} className=\"permission-checkbox\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={role.permissions.includes(permission)}\r\n                      onChange={() => togglePermission(role.id, permission)}\r\n                    />\r\n                    {permission}\r\n                  </label>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"buttons\">\r\n        <button onClick={handleSaveChanges} className=\"save-button\">\r\n          Save Changes\r\n        </button>\r\n        <button onClick={handleCancelChanges} className=\"cancel-button\">\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PermissionTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}