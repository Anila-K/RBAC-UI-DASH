{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANILA\\\\rbac-ui-dashboard\\\\src\\\\Components\\\\PermissionTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../assets/Styles/PermissionTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PermissionTable = () => {\n  _s();\n  const [roles, setRoles] = useState([]);\n  const [originalRoles, setOriginalRoles] = useState([]);\n\n  // Fetch roles from the JSON server when the component mounts\n  useEffect(() => {\n    fetch(\"http://localhost:5000/roles\").then(response => response.json()).then(data => {\n      setRoles(data);\n      setOriginalRoles(data);\n    }).catch(error => console.error(\"Error fetching roles:\", error));\n  }, []);\n\n  // Toggle permission for a specific role\n  const togglePermission = (roleId, permission) => {\n    setRoles(prevRoles => prevRoles.map(role => role.id === roleId ? {\n      ...role,\n      permissions: role.permissions.includes(permission) ? role.permissions.filter(perm => perm !== permission) : [...role.permissions, permission]\n    } : role));\n  };\n\n  // Save changes to the server\n  const handleSaveChanges = () => {\n    roles.forEach(role => {\n      fetch(`http://localhost:5000/roles/${role.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(role)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`Failed to update role: ${role.roleName}`);\n        }\n      }).catch(error => console.error(\"Error updating roles:\", error));\n    });\n    setOriginalRoles([...roles]);\n    alert(\"Permissions updated successfully!\");\n  };\n\n  // Cancel changes and revert to the original state\n  const handleCancelChanges = () => {\n    setRoles([...originalRoles]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"permission-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Permissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: roles.map(role => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: role.roleName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Read\", \"Write\", \"Delete\"].map(permission => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"permission-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: role.permissions.includes(permission),\n                onChange: () => togglePermission(role.id, permission)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), permission]\n            }, permission, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, role.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveChanges,\n        className: \"save-button\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelChanges,\n        className: \"cancel-button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(PermissionTable, \"Bn+zFPK/nD7H/wVahiDB4r+HWwI=\");\n_c = PermissionTable;\nexport default PermissionTable;\nvar _c;\n$RefreshReg$(_c, \"PermissionTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PermissionTable","_s","roles","setRoles","originalRoles","setOriginalRoles","fetch","then","response","json","data","catch","error","console","togglePermission","roleId","permission","prevRoles","map","role","id","permissions","includes","filter","perm","handleSaveChanges","forEach","method","headers","body","JSON","stringify","ok","Error","roleName","alert","handleCancelChanges","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ANILA/rbac-ui-dashboard/src/Components/PermissionTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../assets/Styles/PermissionTable.css\";\r\n\r\nconst PermissionTable = () => {\r\n  const [roles, setRoles] = useState([]);\r\n  const [originalRoles, setOriginalRoles] = useState([]);\r\n\r\n  // Fetch roles from the JSON server when the component mounts\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/roles\") \r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setRoles(data);\r\n        setOriginalRoles(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching roles:\", error));\r\n  }, []);\r\n\r\n  // Toggle permission for a specific role\r\n  const togglePermission = (roleId, permission) => {\r\n    setRoles((prevRoles) =>\r\n      prevRoles.map((role) =>\r\n        role.id === roleId\r\n          ? {\r\n              ...role,\r\n              permissions: role.permissions.includes(permission)\r\n                ? role.permissions.filter((perm) => perm !== permission)\r\n                : [...role.permissions, permission],\r\n            }\r\n          : role\r\n      )\r\n    );\r\n  };\r\n\r\n  // Save changes to the server\r\n  const handleSaveChanges = () => {\r\n    roles.forEach((role) => {\r\n      fetch(`http://localhost:5000/roles/${role.id}`, {\r\n        method: \"PUT\", \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(role),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`Failed to update role: ${role.roleName}`);\r\n          }\r\n        })\r\n        .catch((error) => console.error(\"Error updating roles:\", error));\r\n    });\r\n\r\n    setOriginalRoles([...roles]); \r\n    alert(\"Permissions updated successfully!\");\r\n  };\r\n\r\n  // Cancel changes and revert to the original state\r\n  const handleCancelChanges = () => {\r\n    setRoles([...originalRoles]); \r\n  };\r\n\r\n  return (\r\n    <div className=\"permission-table\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Role Name</th>\r\n            <th>Permissions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {roles.map((role) => (\r\n            <tr key={role.id}>\r\n              <td>{role.roleName}</td>\r\n              <td>\r\n                {[\"Read\", \"Write\", \"Delete\"].map((permission) => (\r\n                  <label key={permission} className=\"permission-checkbox\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={role.permissions.includes(permission)}\r\n                      onChange={() => togglePermission(role.id, permission)}\r\n                    />\r\n                    {permission}\r\n                  </label>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"buttons\">\r\n        <button onClick={handleSaveChanges} className=\"save-button\">\r\n          Save Changes\r\n        </button>\r\n        <button onClick={handleCancelChanges} className=\"cancel-button\">\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PermissionTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}