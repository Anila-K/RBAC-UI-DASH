{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANILA\\\\rbac-ui-dashboard\\\\src\\\\Components\\\\RoleTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Button } from \"antd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleTable = () => {\n  _s();\n  const [roles, setRoles] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/roles\").then(res => setRoles(res.data));\n  }, []);\n  const columns = [{\n    title: \"Role Name\",\n    dataIndex: \"roleName\",\n    key: \"roleName\"\n  }, {\n    title: \"Permissions\",\n    dataIndex: \"permissions\",\n    key: \"permissions\",\n    render: permissions => permissions.join(\", \")\n  }, {\n    title: \"Actions\",\n    key: \"actions\",\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => alert(`Edit role ${record.id}`),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    dataSource: roles,\n    columns: columns,\n    rowKey: \"id\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(RoleTable, \"R2xWDQsNeWkjL6AvURYzBuOcuAg=\");\n_c = RoleTable;\nexport default RoleTable;\nvar _c;\n$RefreshReg$(_c, \"RoleTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","axios","jsxDEV","_jsxDEV","RoleTable","_s","roles","setRoles","get","then","res","data","columns","title","dataIndex","key","render","permissions","join","_","record","type","onClick","alert","id","children","fileName","_jsxFileName","lineNumber","columnNumber","dataSource","rowKey","_c","$RefreshReg$"],"sources":["C:/Users/ANILA/rbac-ui-dashboard/src/Components/RoleTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst RoleTable = () => {\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/roles\").then((res) => setRoles(res.data));\r\n  }, []);\r\n\r\n  const columns = [\r\n    { title: \"Role Name\", dataIndex: \"roleName\", key: \"roleName\" },\r\n    { title: \"Permissions\", dataIndex: \"permissions\", key: \"permissions\", render: (permissions) => permissions.join(\", \") },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      render: (_, record) => (\r\n        <Button type=\"link\" onClick={() => alert(`Edit role ${record.id}`)}>\r\n          Edit\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return <Table dataSource={roles} columns={columns} rowKey=\"id\" />;\r\n};\r\n\r\nexport default RoleTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AACpC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdG,KAAK,CAACO,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKH,QAAQ,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,WAAW;IAAEC,SAAS,EAAE,UAAU;IAAEC,GAAG,EAAE;EAAW,CAAC,EAC9D;IAAEF,KAAK,EAAE,aAAa;IAAEC,SAAS,EAAE,aAAa;IAAEC,GAAG,EAAE,aAAa;IAAEC,MAAM,EAAGC,WAAW,IAAKA,WAAW,CAACC,IAAI,CAAC,IAAI;EAAE,CAAC,EACvH;IACEL,KAAK,EAAE,SAAS;IAChBE,GAAG,EAAE,SAAS;IACdC,MAAM,EAAEA,CAACG,CAAC,EAAEC,MAAM,kBAChBjB,OAAA,CAACH,MAAM;MAACqB,IAAI,EAAC,MAAM;MAACC,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,aAAaH,MAAM,CAACI,EAAE,EAAE,CAAE;MAAAC,QAAA,EAAC;IAEpE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAEZ,CAAC,CACF;EAED,oBAAO1B,OAAA,CAACJ,KAAK;IAAC+B,UAAU,EAAExB,KAAM;IAACM,OAAO,EAAEA,OAAQ;IAACmB,MAAM,EAAC;EAAI;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnE,CAAC;AAACxB,EAAA,CAtBID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}