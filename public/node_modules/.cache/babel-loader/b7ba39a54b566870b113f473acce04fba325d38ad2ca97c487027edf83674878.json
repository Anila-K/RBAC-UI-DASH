{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANILA\\\\rbac-ui-dashboard\\\\src\\\\Components\\\\RoleTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../assets/Styles/RoleTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleTable = () => {\n  _s();\n  const [roles, setRoles] = useState([{\n    id: 1,\n    name: \"Admin\",\n    permissions: [\"Read\", \"Write\", \"Delete\"]\n  }, {\n    id: 2,\n    name: \"User\",\n    permissions: [\"Read\"]\n  }]);\n  const [newRole, setNewRole] = useState(\"\");\n  const [editingRole, setEditingRole] = useState(null);\n  const [updatedName, setUpdatedName] = useState(\"\");\n  const handleAddRole = () => {\n    if (newRole.trim() === \"\") return;\n    const newId = roles.length + 1;\n    setRoles([...roles, {\n      id: newId,\n      name: newRole,\n      permissions: []\n    }]);\n    setNewRole(\"\");\n  };\n  const handleEditRole = role => {\n    setEditingRole(role.id);\n    setUpdatedName(role.name);\n  };\n  const handleSaveEdit = id => {\n    setRoles(roles.map(role => role.id === id ? {\n      ...role,\n      name: updatedName\n    } : role));\n    setEditingRole(null);\n  };\n  const handleDeleteRole = id => {\n    setRoles(roles.filter(role => role.id !== id));\n  };\n  const handleAssignPermission = (id, permission) => {\n    setRoles(roles.map(role => role.id === id ? {\n      ...role,\n      permissions: role.permissions.includes(permission) ? role.permissions.filter(perm => perm !== permission) : [...role.permissions, permission]\n    } : role));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-role\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newRole,\n        placeholder: \"New Role Name\",\n        onChange: e => setNewRole(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRole,\n        children: \"Add Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Permissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: roles.map(role => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingRole === role.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: updatedName,\n              onChange: e => setUpdatedName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this) : role.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"permissions\",\n              children: [\"Read\", \"Write\", \"Delete\"].map(permission => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: role.permissions.includes(permission),\n                  onChange: () => handleAssignPermission(role.id, permission)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this), permission]\n              }, permission, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [editingRole === role.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSaveEdit(role.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditRole(role),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteRole(role.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, role.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleTable, \"OMxCX1Mo33PbSdcRK7TXVR1V7r4=\");\n_c = RoleTable;\nexport default RoleTable;\nvar _c;\n$RefreshReg$(_c, \"RoleTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoleTable","_s","roles","setRoles","id","name","permissions","newRole","setNewRole","editingRole","setEditingRole","updatedName","setUpdatedName","handleAddRole","trim","newId","length","handleEditRole","role","handleSaveEdit","map","handleDeleteRole","filter","handleAssignPermission","permission","includes","perm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/ANILA/rbac-ui-dashboard/src/Components/RoleTable.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../assets/Styles/RoleTable.css\";\r\n\r\nconst RoleTable = () => {\r\n  const [roles, setRoles] = useState([\r\n    { id: 1, name: \"Admin\", permissions: [\"Read\", \"Write\", \"Delete\"] },\r\n    { id: 2, name: \"User\", permissions: [\"Read\"] },\r\n  ]);\r\n  const [newRole, setNewRole] = useState(\"\");\r\n  const [editingRole, setEditingRole] = useState(null);\r\n  const [updatedName, setUpdatedName] = useState(\"\");\r\n\r\n  const handleAddRole = () => {\r\n    if (newRole.trim() === \"\") return;\r\n    const newId = roles.length + 1;\r\n    setRoles([...roles, { id: newId, name: newRole, permissions: [] }]);\r\n    setNewRole(\"\");\r\n  };\r\n\r\n  const handleEditRole = (role) => {\r\n    setEditingRole(role.id);\r\n    setUpdatedName(role.name);\r\n  };\r\n\r\n  const handleSaveEdit = (id) => {\r\n    setRoles(\r\n      roles.map((role) =>\r\n        role.id === id ? { ...role, name: updatedName } : role\r\n      )\r\n    );\r\n    setEditingRole(null);\r\n  };\r\n\r\n  const handleDeleteRole = (id) => {\r\n    setRoles(roles.filter((role) => role.id !== id));\r\n  };\r\n\r\n  const handleAssignPermission = (id, permission) => {\r\n    setRoles(\r\n      roles.map((role) =>\r\n        role.id === id\r\n          ? {\r\n              ...role,\r\n              permissions: role.permissions.includes(permission)\r\n                ? role.permissions.filter((perm) => perm !== permission)\r\n                : [...role.permissions, permission],\r\n            }\r\n          : role\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"role-table\">\r\n      <h2>Manage Roles</h2>\r\n      <div className=\"add-role\">\r\n        <input\r\n          type=\"text\"\r\n          value={newRole}\r\n          placeholder=\"New Role Name\"\r\n          onChange={(e) => setNewRole(e.target.value)}\r\n        />\r\n        <button onClick={handleAddRole}>Add Role</button>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Role Name</th>\r\n            <th>Permissions</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {roles.map((role) => (\r\n            <tr key={role.id}>\r\n              <td>\r\n                {editingRole === role.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={updatedName}\r\n                    onChange={(e) => setUpdatedName(e.target.value)}\r\n                  />\r\n                ) : (\r\n                  role.name\r\n                )}\r\n              </td>\r\n              <td>\r\n                <div className=\"permissions\">\r\n                  {[\"Read\", \"Write\", \"Delete\"].map((permission) => (\r\n                    <label key={permission}>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={role.permissions.includes(permission)}\r\n                        onChange={() => handleAssignPermission(role.id, permission)}\r\n                      />\r\n                      {permission}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </td>\r\n              <td>\r\n                {editingRole === role.id ? (\r\n                  <button onClick={() => handleSaveEdit(role.id)}>Save</button>\r\n                ) : (\r\n                  <button onClick={() => handleEditRole(role)}>Edit</button>\r\n                )}\r\n                <button onClick={() => handleDeleteRole(role.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CACjC;IAAEO,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,WAAW,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ;EAAE,CAAC,EAClE;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE,CAAC,MAAM;EAAE,CAAC,CAC/C,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMgB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC3B,MAAMC,KAAK,GAAGb,KAAK,CAACc,MAAM,GAAG,CAAC;IAC9Bb,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEE,EAAE,EAAEW,KAAK;MAAEV,IAAI,EAAEE,OAAO;MAAED,WAAW,EAAE;IAAG,CAAC,CAAC,CAAC;IACnEE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMS,cAAc,GAAIC,IAAI,IAAK;IAC/BR,cAAc,CAACQ,IAAI,CAACd,EAAE,CAAC;IACvBQ,cAAc,CAACM,IAAI,CAACb,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMc,cAAc,GAAIf,EAAE,IAAK;IAC7BD,QAAQ,CACND,KAAK,CAACkB,GAAG,CAAEF,IAAI,IACbA,IAAI,CAACd,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGc,IAAI;MAAEb,IAAI,EAAEM;IAAY,CAAC,GAAGO,IACpD,CACF,CAAC;IACDR,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMW,gBAAgB,GAAIjB,EAAE,IAAK;IAC/BD,QAAQ,CAACD,KAAK,CAACoB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EAED,MAAMmB,sBAAsB,GAAGA,CAACnB,EAAE,EAAEoB,UAAU,KAAK;IACjDrB,QAAQ,CACND,KAAK,CAACkB,GAAG,CAAEF,IAAI,IACbA,IAAI,CAACd,EAAE,KAAKA,EAAE,GACV;MACE,GAAGc,IAAI;MACPZ,WAAW,EAAEY,IAAI,CAACZ,WAAW,CAACmB,QAAQ,CAACD,UAAU,CAAC,GAC9CN,IAAI,CAACZ,WAAW,CAACgB,MAAM,CAAEI,IAAI,IAAKA,IAAI,KAAKF,UAAU,CAAC,GACtD,CAAC,GAAGN,IAAI,CAACZ,WAAW,EAAEkB,UAAU;IACtC,CAAC,GACDN,IACN,CACF,CAAC;EACH,CAAC;EAED,oBACEnB,OAAA;IAAK4B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB7B,OAAA;MAAA6B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjC,OAAA;MAAK4B,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB7B,OAAA;QACEkC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE3B,OAAQ;QACf4B,WAAW,EAAC,eAAe;QAC3BC,QAAQ,EAAGC,CAAC,IAAK7B,UAAU,CAAC6B,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFjC,OAAA;QAAQwC,OAAO,EAAE1B,aAAc;QAAAe,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACNjC,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,eACE7B,OAAA;UAAA6B,QAAA,gBACE7B,OAAA;YAAA6B,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBjC,OAAA;YAAA6B,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBjC,OAAA;YAAA6B,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRjC,OAAA;QAAA6B,QAAA,EACG1B,KAAK,CAACkB,GAAG,CAAEF,IAAI,iBACdnB,OAAA;UAAA6B,QAAA,gBACE7B,OAAA;YAAA6B,QAAA,EACGnB,WAAW,KAAKS,IAAI,CAACd,EAAE,gBACtBL,OAAA;cACEkC,IAAI,EAAC,MAAM;cACXC,KAAK,EAAEvB,WAAY;cACnByB,QAAQ,EAAGC,CAAC,IAAKzB,cAAc,CAACyB,CAAC,CAACC,MAAM,CAACJ,KAAK;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD,CAAC,GAEFd,IAAI,CAACb;UACN;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACLjC,OAAA;YAAA6B,QAAA,eACE7B,OAAA;cAAK4B,SAAS,EAAC,aAAa;cAAAC,QAAA,EACzB,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAACR,GAAG,CAAEI,UAAU,iBAC1CzB,OAAA;gBAAA6B,QAAA,gBACE7B,OAAA;kBACEkC,IAAI,EAAC,UAAU;kBACfO,OAAO,EAAEtB,IAAI,CAACZ,WAAW,CAACmB,QAAQ,CAACD,UAAU,CAAE;kBAC/CY,QAAQ,EAAEA,CAAA,KAAMb,sBAAsB,CAACL,IAAI,CAACd,EAAE,EAAEoB,UAAU;gBAAE;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D,CAAC,EACDR,UAAU;cAAA,GANDA,UAAU;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOf,CACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACLjC,OAAA;YAAA6B,QAAA,GACGnB,WAAW,KAAKS,IAAI,CAACd,EAAE,gBACtBL,OAAA;cAAQwC,OAAO,EAAEA,CAAA,KAAMpB,cAAc,CAACD,IAAI,CAACd,EAAE,CAAE;cAAAwB,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAE7DjC,OAAA;cAAQwC,OAAO,EAAEA,CAAA,KAAMtB,cAAc,CAACC,IAAI,CAAE;cAAAU,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAC1D,eACDjC,OAAA;cAAQwC,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACH,IAAI,CAACd,EAAE,CAAE;cAAAwB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC;QAAA,GAjCEd,IAAI,CAACd,EAAE;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkCZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA/GID,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AAiHf,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}